{"version":3,"file":"node-build.mjs","sources":["../../server/routes/demo.ts","../../server/routes/email.ts","../../server/index.ts","../../server/node-build.ts"],"sourcesContent":["import { RequestHandler } from \"express\";\r\nimport { DemoResponse } from \"@shared/api\";\r\n\r\nexport const handleDemo: RequestHandler = (req, res) => {\r\n  const response: DemoResponse = {\r\n    message: \"Hello from Express server\",\r\n  };\r\n  res.status(200).json(response);\r\n};\r\n","import { RequestHandler } from \"express\";\r\nimport { z } from \"zod\";\r\nimport * as nodemailer from \"nodemailer\";\r\n\r\nconst ContactFormSchema = z.object({\r\n  name: z.string().min(1, \"Name is required\"),\r\n  email: z.string().email(\"Valid email is required\"),\r\n  phone: z.string().optional(),\r\n  subject: z.string().min(1, \"Subject is required\"),\r\n  message: z.string().min(1, \"Message is required\"),\r\n  formType: z.enum([\"contact\", \"project\"]),\r\n});\r\n\r\nconst ProjectFormSchema = z.object({\r\n  name: z.string().min(1, \"Name is required\"),\r\n  email: z.string().email(\"Valid email is required\"),\r\n  company: z.string().optional(),\r\n  phone: z.string().optional(),\r\n  projectType: z.enum([\"web\", \"mobile\", \"ai\", \"freelancer-collaboration\"]),\r\n  budget: z.string().min(1, \"Budget range is required\"),\r\n  timeline: z.string().min(1, \"Timeline is required\"),\r\n  description: z.string().min(1, \"Project description is required\"),\r\n  features: z.array(z.string()).optional(),\r\n  additionalInfo: z.string().optional(),\r\n});\r\n\r\n// Hardcoded email credentials (NOT RECOMMENDED FOR PRODUCTION)\r\nconst DIRECT_EMAIL_USER = \"mrjaishu728@gmail.com\";\r\nconst DIRECT_EMAIL_PASS = \"vdnrmsgbnvmpvuke\"; // This is your Google App Password\r\n\r\n// Create email transporter\r\nconst createTransporter = () => {\r\n  // Use direct credentials\r\n  if (!DIRECT_EMAIL_USER || !DIRECT_EMAIL_PASS) {\r\n    console.log(\r\n      \"⚠️  Email credentials not configured. DIRECT_EMAIL_USER and DIRECT_EMAIL_PASS are empty.\",\r\n    );\r\n    return null;\r\n  }\r\n\r\n  return nodemailer.createTransport({\r\n    host: \"smtp.gmail.com\",\r\n    port: 587,\r\n    secure: false,\r\n    auth: {\r\n      user: DIRECT_EMAIL_USER,\r\n      pass: DIRECT_EMAIL_PASS,\r\n    },\r\n  });\r\n};\r\n\r\nconst sendEmail = async (to: string, subject: string, htmlContent: string) => {\r\n  try {\r\n    console.log(\"📧 Processing email request...\");\r\n    console.log(\"📧 To:\", to);\r\n    console.log(\"📧 Subject:\", subject);\r\n\r\n    const transporter = createTransporter();\r\n\r\n    // The condition now checks against DIRECT_EMAIL_USER and DIRECT_EMAIL_PASS\r\n    if (\r\n      transporter &&\r\n      DIRECT_EMAIL_USER &&\r\n      DIRECT_EMAIL_PASS &&\r\n      DIRECT_EMAIL_PASS  // Keep this check for the demo placeholder\r\n    ) {\r\n      try {\r\n        // Real email sending with proper credentials\r\n        const mailOptions = {\r\n          from: `\"SparkNest Studio\" <${DIRECT_EMAIL_USER}>`, // Use DIRECT_EMAIL_USER here\r\n          to: to,\r\n          subject: subject,\r\n          html: htmlContent,\r\n          replyTo: DIRECT_EMAIL_USER, // Use DIRECT_EMAIL_USER here\r\n        };\r\n\r\n        const result = await transporter.sendMail(mailOptions);\r\n        console.log(\"✅ Email sent successfully to:\", to);\r\n        console.log(\"📧 Message ID:\", result.messageId);\r\n        return true;\r\n      } catch (emailError: any) { // Explicitly type emailError for better access to properties\r\n        console.error(\"❌ SMTP Email sending failed:\", emailError);\r\n        // Log more details from the error object if available\r\n        if (emailError.code) console.error(\"Error Code:\", emailError.code);\r\n        if (emailError.response) console.error(\"Error Response:\", emailError.response);\r\n        if (emailError.responseCode) console.error(\"Error Response Code:\", emailError.responseCode);\r\n        console.log(\"📧 Falling back to console logging...\");\r\n      }\r\n    }\r\n\r\n    // Fallback: Detailed console logging for demo/development\r\n    console.log(\"📧 === EMAIL CONTENT (Demo Mode) ===\");\r\n    console.log(\"📧 TO:\", to);\r\n    console.log(\"📧 SUBJECT:\", subject);\r\n    console.log(\"📧 === EMAIL HTML ===\");\r\n    console.log(htmlContent);\r\n    console.log(\"📧 === END EMAIL ===\");\r\n    console.log(\r\n      \"📧 Note: Using hardcoded credentials. For production, use environment variables.\",\r\n    );\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"❌ Email processing failed (general error):\", error); // Clarified error message\r\n    return true; // Don't break the form submission\r\n  }\r\n};\r\n\r\nexport const handleContactForm: RequestHandler = async (req, res) => {\r\n  try {\r\n    console.log(\"📧 Received contact form submission:\", req.body);\r\n    const validatedData = ContactFormSchema.parse(req.body);\r\n\r\n    const { name, email, phone, subject, message, formType } = validatedData;\r\n\r\n    const currentTime = new Date().toLocaleString(\"en-IN\", {\r\n      timeZone: \"Asia/Kolkata\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n    });\r\n\r\n    // Dark theme for Contact Form email\r\n    const htmlContent = `\r\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background: #1a1a2e; color: #e0e0e0; border-radius: 15px; overflow: hidden;\">\r\n        <div style=\"background: linear-gradient(135deg, #8A2BE2, #4169E1); padding: 30px; border-radius: 15px 15px 0 0; text-align: center;\">\r\n          <div style=\"background: rgba(255,255,255,0.2); width: 60px; height: 60px; border-radius: 50%; margin: 0 auto 15px; display: flex; align-items: center; justify-content: center;\">\r\n            <span style=\"font-size: 30px;\">✨</span>\r\n          </div>\r\n          <h1 style=\"color: white; margin: 0; font-size: 28px;\">New Contact Inquiry</h1>\r\n          <p style=\"color: rgba(255,255,255,0.9); margin: 10px 0 0 0;\">SparkNest Studio</p>\r\n        </div>\r\n\r\n        <div style=\"padding: 30px; border: 1px solid #333; border-top: none; border-radius: 0 0 15px 15px;\">\r\n          <div style=\"margin-bottom: 25px; padding: 15px; background: #2a2a4a; border-radius: 10px; border-left: 5px solid #8A2BE2;\">\r\n            <p style=\"margin: 0; color: #a0a0a0; font-size: 14px;\">📅 Received: ${currentTime}</p>\r\n          </div>\r\n\r\n          <h2 style=\"color: #e0e0e0; margin-bottom: 20px; font-size: 22px;\">👤 Contact Information</h2>\r\n          <div style=\"background: #2a2a4a; padding: 20px; border-radius: 10px; margin-bottom: 25px;\">\r\n            <table style=\"width: 100%; border-collapse: collapse;\">\r\n              <tr style=\"border-bottom: 1px solid #3a3a5a;\">\r\n                <td style=\"padding: 8px 0; font-weight: bold; color: #a0a0a0; width: 30%;\">Full Name:</td>\r\n                <td style=\"padding: 8px 0; color: #e0e0e0;\">${name}</td>\r\n              </tr>\r\n              <tr style=\"border-bottom: 1px solid #3a3a5a;\">\r\n                <td style=\"padding: 8px 0; font-weight: bold; color: #a0a0a0;\">Email:</td>\r\n                <td style=\"padding: 8px 0; color: #e0e0e0;\"><a href=\"mailto:${email}\" style=\"color: #4169E1; text-decoration: none;\">${email}</a></td>\r\n              </tr>\r\n              ${\r\n                phone\r\n                  ? `\r\n              <tr style=\"border-bottom: 1px solid #3a3a5a;\">\r\n                <td style=\"padding: 8px 0; font-weight: bold; color: #a0a0a0;\">Phone:</td>\r\n                <td style=\"padding: 8px 0; color: #e0e0e0;\"><a href=\"tel:${phone}\" style=\"color: #4169E1; text-decoration: none;\">${phone}</a></td>\r\n              </tr>\r\n              `\r\n                  : \"\"\r\n              }\r\n              <tr>\r\n                <td style=\"padding: 8px 0; font-weight: bold; color: #a0a0a0;\">Subject:</td>\r\n                <td style=\"padding: 8px 0; color: #e0e0e0;\">${subject}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n\r\n          <h2 style=\"color: #e0e0e0; margin-bottom: 15px; font-size: 22px;\">💬 Message Details</h2>\r\n          <div style=\"background: #2a2a4a; padding: 20px; border-radius: 10px; border-left: 5px solid #4169E1; margin-bottom: 25px;\">\r\n            <p style=\"margin: 0; color: #e0e0e0; line-height: 1.6; white-space: pre-wrap;\">${message}</p>\r\n          </div>\r\n\r\n          <div style=\"background: linear-gradient(135deg, #2a2a4a, #1a1a2e); padding: 20px; border-radius: 10px; border: 1px solid #4a4a6a;\">\r\n            <h3 style=\"margin: 0 0 15px 0; color: #e0e0e0; font-size: 18px;\">📞 Quick Response Options</h3>\r\n            <div style=\"display: flex; flex-wrap: wrap; gap: 10px;\">\r\n              <a href=\"mailto:${email}\" style=\"background: #4169E1; color: white; padding: 10px 20px; text-decoration: none; border-radius: 8px; font-weight: bold; display: inline-block;\">📧 Reply via Email</a>\r\n              <a href=\"https://wa.me/919334732506?text=Hi, I received your inquiry about ${subject}. Let's discuss your requirements.\" style=\"background: #22c55e; color: white; padding: 10px 20px; text-decoration: none; border-radius: 8px; font-weight: bold; display: inline-block;\">📱 WhatsApp</a>\r\n              ${phone ? `<a href=\"tel:${phone}\" style=\"background: #8b5cf6; color: white; padding: 10px 20px; text-decoration: none; border-radius: 8px; font-weight: bold; display: inline-block;\">📞 Call Now</a>` : \"\"}\r\n            </div>\r\n          </div>\r\n\r\n          <div style=\"margin-top: 30px; padding: 15px; background: #2a2a4a; border-radius: 8px; text-align: center; border: 1px solid #3a3a5a;\">\r\n            <p style=\"margin: 0; color: #a0a0a0; font-size: 12px;\">This inquiry was received via SparkNest Studio website contact form</p>\r\n            <p style=\"margin: 5px 0 0 0; color: #a0a0a0; font-size: 12px;\">Response expected within 24 hours</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Changed recipient email to mrjaishu728@gmail.com\r\n    await sendEmail(\r\n      \"mrjaishu728@gmail.com\",\r\n      `[SparkNest] ${subject}`,\r\n      htmlContent,\r\n    );\r\n\r\n    console.log(`✅ Contact form submitted by ${name} (${email})`);\r\n\r\n    res.json({\r\n      success: true,\r\n      message:\r\n        \"Your message has been sent successfully! We'll get back to you soon.\",\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error sending contact email:\", error);\r\n\r\n    if (error instanceof z.ZodError) {\r\n      res.status(400).json({\r\n        success: false,\r\n        message: \"Invalid form data\",\r\n        errors: error.errors,\r\n      });\r\n    } else {\r\n      res.status(500).json({\r\n        success: false,\r\n        message: \"Failed to send message. Please try again.\",\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const handleProjectForm: RequestHandler = async (req, res) => {\r\n  try {\r\n    console.log(\"📧 Received project form submission:\", req.body);\r\n    const validatedData = ProjectFormSchema.parse(req.body);\r\n\r\n    const {\r\n      name,\r\n      email,\r\n      company,\r\n      phone,\r\n      projectType,\r\n      budget,\r\n      timeline,\r\n      description,\r\n      features,\r\n      additionalInfo,\r\n    } = validatedData;\r\n\r\n    const projectTypeLabels = {\r\n      web: \"Web Application\",\r\n      mobile: \"Mobile Application\",\r\n      ai: \"AI/ML Solution\",\r\n      \"freelancer-collaboration\": \"Freelancer Collaboration\",\r\n    };\r\n\r\n    const currentTime = new Date().toLocaleString(\"en-IN\", {\r\n      timeZone: \"Asia/Kolkata\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n    });\r\n\r\n    const projectValue = {\r\n      \"under-5k\": \"Under $5,000\",\r\n      \"5k-15k\": \"$5,000 - $15,000\",\r\n      \"15k-50k\": \"$15,000 - $50,000\",\r\n      \"50k-100k\": \"$50,000 - $100,000\", // Fixed syntax error here\r\n      \"over-100k\": \"Over $100,000\",\r\n      discuss: \"Let's discuss\",\r\n    };\r\n\r\n    const timelineLabels = {\r\n      asap: \"ASAP (Rush project)\",\r\n      \"1-month\": \"1 Month\",\r\n      \"2-3-months\": \"2-3 Months\",\r\n      \"3-6-months\": \"3-6 Months\",\r\n      \"6-months-plus\": \"6+ Months\",\r\n      flexible: \"Flexible timeline\",\r\n    };\r\n\r\n    // Dark theme for Project Form email\r\n    const htmlContent = `\r\n      <div style=\"font-family: Arial, sans-serif; max-width: 700px; margin: 0 auto; background: #1a1a2e; color: #e0e0e0; border-radius: 15px; overflow: hidden;\">\r\n        <div style=\"background: linear-gradient(135deg, #8A2BE2, #4169E1); padding: 30px; border-radius: 15px 15px 0 0; text-align: center;\">\r\n          <div style=\"background: rgba(255,255,255,0.2); width: 70px; height: 70px; border-radius: 50%; margin: 0 auto 15px; display: flex; align-items: center; justify-content: center;\">\r\n            <span style=\"font-size: 35px;\">🚀</span>\r\n          </div>\r\n          <h1 style=\"color: white; margin: 0; font-size: 32px;\">New Project Request</h1>\r\n          <p style=\"color: rgba(255,255,255,0.9); margin: 10px 0 0 0; font-size: 18px;\">${projectTypeLabels[projectType]}</p>\r\n        </div>\r\n\r\n        <div style=\"padding: 30px; border: 1px solid #333; border-top: none; border-radius: 0 0 15px 15px;\">\r\n          <div style=\"margin-bottom: 25px; padding: 15px; background: #2a2a4a; border-radius: 10px; border-left: 5px solid #8A2BE2;\">\r\n            <p style=\"margin: 0; color: #a0a0a0; font-size: 14px;\">📅 Submitted: ${currentTime}</p>\r\n            <p style=\"margin: 5px 0 0 0; color: #a0a0a0; font-size: 14px;\">🏷️ Project ID: PROJ-${Date.now()}</p>\r\n          </div>\r\n\r\n          <h2 style=\"color: #e0e0e0; margin-bottom: 20px; font-size: 24px;\">👤 Client Information</h2>\r\n          <div style=\"background: #2a2a4a; padding: 25px; border-radius: 10px; margin-bottom: 30px;\">\r\n            <table style=\"width: 100%; border-collapse: collapse;\">\r\n              <tr style=\"border-bottom: 1px solid #3a3a5a;\">\r\n                <td style=\"padding: 12px 0; font-weight: bold; color: #a0a0a0; width: 30%;\">Full Name:</td>\r\n                <td style=\"padding: 12px 0; color: #e0e0e0; font-size: 16px;\">${name}</td>\r\n              </tr>\r\n              <tr style=\"border-bottom: 1px solid #3a3a5a;\">\r\n                <td style=\"padding: 12px 0; font-weight: bold; color: #a0a0a0;\">Email:</td>\r\n                <td style=\"padding: 12px 0; color: #e0e0e0;\"><a href=\"mailto:${email}\" style=\"color: #4169E1; text-decoration: none; font-size: 16px;\">${email}</a></td>\r\n              </tr>\r\n              ${\r\n                company\r\n                  ? `\r\n              <tr style=\"border-bottom: 1px solid #3a3a5a;\">\r\n                <td style=\"padding: 12px 0; font-weight: bold; color: #a0a0a0;\">Company:</td>\r\n                <td style=\"padding: 12px 0; color: #e0e0e0; font-size: 16px;\">${company}</td>\r\n              </tr>\r\n              `\r\n                  : \"\"\r\n              }\r\n              ${\r\n                phone\r\n                  ? `\r\n              <tr style=\"border-bottom: 1px solid #3a3a5a;\">\r\n                <td style=\"padding: 12px 0; font-weight: bold; color: #a0a0a0;\">Phone:</td>\r\n                <td style=\"padding: 12px 0; color: #e0e0e0;\"><a href=\"tel:${phone}\" style=\"color: #4169E1; text-decoration: none; font-size: 16px;\">${phone}</a></td>\r\n              </tr>\r\n              `\r\n                  : \"\"\r\n              }\r\n            </table>\r\n          </div>\r\n\r\n          <h2 style=\"color: #e0e0e0; margin-bottom: 20px; font-size: 24px;\">🎯 Project Overview</h2>\r\n          <div style=\"background: #2a2a4a; padding: 25px; border-radius: 10px; margin-bottom: 30px;\">\r\n            <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;\">\r\n              <div style=\"background: #1a1a2e; padding: 15px; border-radius: 8px; border-left: 4px solid #4169E1;\">\r\n                <h4 style=\"margin: 0 0 8px 0; color: #a0a0a0; font-size: 14px;\">PROJECT TYPE</h4>\r\n                <p style=\"margin: 0; color: #e0e0e0; font-weight: bold; font-size: 16px;\">${projectTypeLabels[projectType]}</p>\r\n              </div>\r\n              <div style=\"background: #1a1a2e; padding: 15px; border-radius: 8px; border-left: 4px solid #059669;\">\r\n                <h4 style=\"margin: 0 0 8px 0; color: #a0a0a0; font-size: 14px;\">BUDGET RANGE</h4>\r\n                <p style=\"margin: 0; color: #e0e0e0; font-weight: bold; font-size: 16px;\">${projectValue[budget] || budget}</p>\r\n              </div>\r\n            </div>\r\n            <div style=\"background: #1a1a2e; padding: 15px; border-radius: 8px; border-left: 4px solid #f59e0b;\">\r\n              <h4 style=\"margin: 0 0 8px 0; color: #a0a0a0; font-size: 14px;\">TIMELINE</h4>\r\n              <p style=\"margin: 0; color: #e0e0e0; font-weight: bold; font-size: 16px;\">${timelineLabels[timeline] || timeline}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <h2 style=\"color: #e0e0e0; margin-bottom: 15px; font-size: 24px;\">📝 Project Description</h2>\r\n          <div style=\"background: #2a2a4a; padding: 25px; border-radius: 10px; border-left: 5px solid #6366f1; margin-bottom: 30px;\">\r\n            <p style=\"margin: 0; color: #e0e0e0; line-height: 1.8; white-space: pre-wrap;\">${description}</p>\r\n          </div>\r\n\r\n          ${\r\n            features && features.length > 0\r\n              ? `\r\n            <h2 style=\"color: #e0e0e0; margin-bottom: 15px; font-size: 24px;\">✨ Required Features</h2>\r\n            <div style=\"background: #2a2a4a; padding: 25px; border-radius: 10px; border: 1px solid #3a3a5a; margin-bottom: 30px;\">\r\n              <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: 12px;\">\r\n                ${features\r\n                  .map(\r\n                    (feature) => `\r\n                  <div style=\"background: #1a1a2e; padding: 12px 16px; border-radius: 8px; border-left: 4px solid #22c55e; display: flex; align-items: center;\">\r\n                    <span style=\"color: #22c55e; margin-right: 8px; font-weight: bold;\">✓</span>\r\n                    <span style=\"color: #e0e0e0; font-size: 14px;\">${feature}</span>\r\n                  </div>\r\n                `,\r\n                  )\r\n                  .join(\"\")}\r\n              </div>\r\n            </div>\r\n          `\r\n              : \"\"\r\n          }\r\n\r\n          ${\r\n            additionalInfo\r\n              ? `\r\n            <h2 style=\"color: #e0e0e0; margin-bottom: 15px; font-size: 24px;\">📋 Additional Information</h2>\r\n            <div style=\"background: #2a2a4a; padding: 25px; border-radius: 10px; border: 1px solid #3a3a5a; margin-bottom: 30px;\">\r\n              <p style=\"margin: 0; color: #e0e0e0; line-height: 1.8; font-size: 16px; white-space: pre-wrap;\">${additionalInfo}</p>\r\n            </div>\r\n          `\r\n              : \"\"\r\n          }\r\n\r\n          <div style=\"background: linear-gradient(135deg, #2a2a4a, #1a1a2e); padding: 25px; border-radius: 10px; border: 1px solid #4a4a6a; margin-bottom: 20px;\">\r\n            <h3 style=\"margin: 0 0 20px 0; color: #e0e0e0; font-size: 20px;\">🚀 Next Steps & Contact</h3>\r\n            <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px; margin-bottom: 20px;\">\r\n              <a href=\"mailto:${email}?subject=Re: Project Request - ${projectTypeLabels[projectType]}\" style=\"background: #4169E1; color: white; padding: 15px 20px; text-decoration: none; border-radius: 8px; font-weight: bold; text-align: center; display: block;\">📧 Send Proposal</a>\r\n              <a href=\"https://wa.me/919334732506?text=Hi ${name}, I received your ${projectTypeLabels[projectType]} project request. Let's schedule a call to discuss the details.\" style=\"background: #22c55e; color: white; padding: 15px 20px; text-decoration: none; border-radius: 8px; font-weight: bold; text-align: center; display: block;\">📱 WhatsApp Chat</a>\r\n              ${phone ? `<a href=\"tel:${phone}\" style=\"background: #8b5cf6; color: white; padding: 15px 20px; text-decoration: none; border-radius: 8px; font-weight: bold; text-align: center; display: block;\">📞 Call Client</a>` : \"\"}\r\n            </div>\r\n            <div style=\"background: rgba(255,255,255,0.1); padding: 15px; border-radius: 8px;\">\r\n              <p style=\"margin: 0; color: #a0a0a0; font-size: 14px; text-align: center;\"><strong>Expected Response:</strong> Within 24 hours | <strong>Contact:</strong> mrjaishu728@gmail.com | <strong>WhatsApp:</strong> +91 9334732506</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div style=\"margin-top: 20px; padding: 15px; background: #2a2a4a; border-radius: 8px; text-align: center; border: 1px solid #3a3a5a;\">\r\n            <p style=\"margin: 0; color: #a0a0a0; font-size: 12px;\">This project request was submitted via SparkNest Studio website</p>\r\n            <p style=\"margin: 5px 0 0 0; color: #a0a0a0; font-size: 12px;\">All client information is confidential and secure</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Changed recipient email to mrjaishu728@gmail.com\r\n    await sendEmail(\r\n      \"mrjaishu728@gmail.com\",\r\n      `[SparkNest] New Project: ${projectTypeLabels[projectType]}`,\r\n      htmlContent,\r\n    );\r\n\r\n    console.log(\r\n      `✅ Project form submitted by ${name} (${email}) - Type: ${projectTypeLabels[projectType]}`,\r\n    );\r\n\r\n    res.json({\r\n      success: true,\r\n      message:\r\n        \"Your project request has been submitted! We'll review it and get back to you within 24 hours.\",\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error sending project email:\", error);\r\n\r\n    if (error instanceof z.ZodError) {\r\n      res.status(400).json({\r\n        success: false,\r\n        message: \"Invalid form data\",\r\n        errors: error.errors,\r\n      });\r\n    } else {\r\n      res.status(500).json({\r\n        success: false,\r\n        message: \"Failed to submit project request. Please try again.\",\r\n      });\r\n    }\r\n  }\r\n};\r\n","import express from \"express\";\r\nimport cors from \"cors\";\r\nimport { handleDemo } from \"./routes/demo\";\r\nimport { handleContactForm, handleProjectForm } from \"./routes/email\";\r\n\r\nexport function createServer() {\r\n  const app = express();\r\n\r\n  // Middleware\r\n  app.use(cors());\r\n  app.use(express.json());\r\n  app.use(express.urlencoded({ extended: true }));\r\n\r\n  // Example API routes\r\n  app.get(\"/api/ping\", (_req, res) => {\r\n    res.json({ message: \"Hello from Express server v2!\" });\r\n  });\r\n\r\n  app.get(\"/api/demo\", handleDemo);\r\n\r\n  // Email form endpoints\r\n  app.post(\"/api/contact\", handleContactForm);\r\n  app.post(\"/api/project\", handleProjectForm);\r\n\r\n  return app;\r\n}\r\n","import path from \"path\";\r\nimport { createServer } from \"./index\";\r\nimport * as express from \"express\";\r\n\r\nconst app = createServer();\r\nconst port = process.env.PORT || 3000;\r\n\r\n// In production, serve the built SPA files\r\nconst __dirname = import.meta.dirname;\r\nconst distPath = path.join(__dirname, \"../spa\");\r\n\r\n// Serve static files\r\napp.use(express.static(distPath));\r\n\r\n// Handle React Router - serve index.html for all non-API routes\r\napp.get(\"*\", (req, res) => {\r\n  // Don't serve index.html for API routes\r\n  if (req.path.startsWith(\"/api/\") || req.path.startsWith(\"/health\")) {\r\n    return res.status(404).json({ error: \"API endpoint not found\" });\r\n  }\r\n\r\n  res.sendFile(path.join(distPath, \"index.html\"));\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`🚀 Fusion Starter server running on port ${port}`);\r\n  console.log(`📱 Frontend: http://localhost:${port}`);\r\n  console.log(`🔧 API: http://localhost:${port}/api`);\r\n});\r\n\r\n// Graceful shutdown\r\nprocess.on(\"SIGTERM\", () => {\r\n  console.log(\"🛑 Received SIGTERM, shutting down gracefully\");\r\n  process.exit(0);\r\n});\r\n\r\nprocess.on(\"SIGINT\", () => {\r\n  console.log(\"🛑 Received SIGINT, shutting down gracefully\");\r\n  process.exit(0);\r\n});\r\n"],"names":["app","express"],"mappings":"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"}